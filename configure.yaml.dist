########################################################################################################################
# ENV Variables used for local development
# Use the command $make dotenv_linter to validate this file
########################################################################################################################
# Terraform project name
PROJECT_NAME: starterkit
# Docker compose project name
COMPOSE_PROJECT_NAME: starterkit
REGION: eu-west-3
# Name of the output of the terraform plan
PLAN_BINARY_FILE: tfplan.binary
PLAN_JSON_FILE: tfplan.json

# Path to the top level directory relative to this file directory.
PROJECT_ROOT_DIR:
# This is the starterkit working directory relative to the PROJECT_ROOT_DIR
PROJECT_DIR:

########################################################################################################################
# Docker Compose image tags to use
########################################################################################################################
# docker-compose.yaml terraform image
BASH_VERSION_TAG: 5
TFENV_VERSION: 3.0.0
# Tools image versions
DOCKER_REGISTRY: public.ecr.aws/h1a2u4u1/
TFENV_IMAGE_TAG: STARTER_KIT_CURRENT_VERSION
TFLINT_IMAGE_TAG: STARTER_KIT_CURRENT_VERSION
TERRAFORM_DOCS_IMAGE_TAG: STARTER_KIT_CURRENT_VERSION
PRECOMMIT_IMAGE_TAG: v1.89.0
DRIFTCTL_IMAGE_TAG: latest
DOTENV_LINTER_IMAGE_TAG: latest
MARKDOWN_LINTER_IMAGE_TAG: latest
SHELL_LINTER_IMAGE_TAG: latest
YAML_LINTER_IMAGE_TAG: latest
POWERSHELL_LINTER_IMAGE_TAG: latest
JSON_LINTER_IMAGE_TAG: latest
TRIVY_IMAGE_TAG: latest
TERRASCAN_IMAGE_TAG: latest
TERRAFORM_VERSION_CHECK_IMAGE_TAG: latest
SCOUTSUITE_VERSION: latest

########################################################################################################################
# GITLAB CI
# Use to validate the .gitlab-ci.yml file with the command $make gitlab_linter
########################################################################################################################
GENERATE_GITLAB_CI: False

CICD_RUNNER_TAGS:
     - aws

GITLAB_JOBS:
    aws-creds: True
    terraform-lint: True
    sonarqube: False
    precommit: True
    terraform-format: True
    terraform-validate: True
    terraform-terrascan: True
    md-lint: True
    shell-lint: True
    yaml-lint: True
    terraform-trivy: True
    driftctl: True
    plan_all: True
    apply_all: True
    delete_all: True

CICD_ROLE_NAME: XXXXXX-CiCd-CrossAccountRole
CICD_ACCOUNT_ID: 123546789123
SONAR_HOST_URL: https://sonarqube

# (Optional) AWS authentication method. possible values are:
#  role: (Default) here the Gitlab Runner assumes the CICD_ROLE_NAME in the CICD_ACCOUNT_ID to get temporary AccessKey/SecretKey credentials
#  oidc: here the Gitlab Runner assumes the CICD_ROLE_NAME using a GITLAB_OIDC_TOKEN to get temporary AccessKey/SecretKey credentials
#  accesskey: here the Gitlab Runner uses permanent AccessKey/SecretKey from group or project CI/CD variables
GITLAB_CI_AWS_AUTH_METHOD: oidc
# (Optional) The id token audience value when AWs Authentication Method is OIDC. The default value is "${CI_SERVER_PROTOCOL}://${CI_SERVER_HOST}"
# GITLAB_CI_OIDC_TOKEN_AUDIENCE: https://gitlab.example.com
# (Optional) Use this variables when the `GITLAB_CI_AWS_AUTH_METHOD` is `accesskey` to specify the AWS Access Key ID and the AWS Secret Access Key CI/CD variables.
# eg. `GITLAB_CI_AWS_ACCESS_KEY_ID_VARIABLE: $CREDS_AWS_ACCESS_KEY_ID`
# GITLAB_CI_AWS_ACCESS_KEY_ID_VARIABLE:
# GITLAB_CI_AWS_SECRET_ACCESS_KEY_VARIABLE:

# Run Terraform apply only on main branch
GIT_MAIN_BRANCH: main
TF_APPLY_ONLY_MAIN: True

# Set Terraform Token key and value to access Terraform Modules stored into private GitLab repo
TF_TOKEN_MODULE_ACCESS: False
TF_TOKEN_MODULE_ACCESS_KEY:
TF_TOKEN_MODULE_ACCESS_VALUE:

########################################################################################################################
# CUSTOM ENV
########################################################################################################################
#CUSTOM_ENV:
#  MYAPI: test

########################################################################################################################
# Terraform Logs
########################################################################################################################
TF_LOG: TRACE
TF_LOG_PATH: /tmp/terraform_logs

########################################################################################################################
# Terraform S3 Backend Configuration
########################################################################################################################
# Leave empty if you want to customize the Terraform backend config into the Terraform plans
# Terraform AWS S3 backend documentation https://developer.hashicorp.com/terraform/language/settings/backends/s3
# Terraform AWS DynamoDB lock documentation https://developer.hashicorp.com/terraform/language/settings/backends/s3#dynamodb-state-locking
TF_VAR_backend_bucket_name: <AWS_S3_BUCKET_NAME>
TF_VAR_backend_bucket_region: <AWS_REGION_CODE>
TF_VAR_backend_dynamodb_table: <AWS_DYNAMODB_TABLE_NAME>
TF_VAR_backend_bucket_access_role: arn:aws:iam::<AWS_ACCOUNT_ID>:role/<AWS_IAM_ROLE_NAME>

# Customize Terraform backend bucket key
# True: set the key in the Terraform plan remote state configuration
# False: Terraform backend bucket key is automatically generated
CUSTOM_BACKEND_BUCKET_KEY: False

########################################################################################################################
# LOCAL DEVELOPMENT
########################################################################################################################
LOCAL_ROLE_NAME: <AWS_IAM_ROLE_NAME>
TF_VAR_assume_role: <AWS_IAM_ROLE_NAME>

########################################################################################################################
# PLANS
########################################################################################################################

######### GLOBAL VARIABLES ###############
# The default terraform version for all plans
# terraform_version: 1.6.4
# The default tflint config file path
tflint_config: .config/.tflint.hcl
# The default precommit config file path
precommit_config: .config/.pre-commit-config.yaml
# The default shell linter config file
shellcheck_config: .config/.shellcheckrc
# The default yaml lint config file
yamllint_config: .config/.yamllintrc
# The default markdown lint config file
markdownlint_config: .config/.mdl_style.rb
# The default trivy config file
trivy_config: .config/.trivy.yaml
# The default terrascan config file
terrascan_config: .config/.terrascan_config.toml
# The default terraform-docs config file
terraform_docs_config: .config/.terraform-docs.yml

# terraform command behavior
DEFAULT_UPGRADE: false

# List the folder for each Terraform Plan to install, respect the order of installation
# Replace the default demo plan by your own plan name and configuration
plans:
  - terraform/demo
#  - name: terraform/demo2
#    # (optional) Add Gitlab Plan artifacts
#    additional_gitlab_plan_artifacts:
#  - builds
#    # (optional) layer specific init parameters replacement
#    override_init_parameters: ""
#    # (optional) layer specific 'plan' parameters replacement
#    override_var_parameters: ""
#    # (optional) layer specific tflint config file
#    tflint_config: .config/.tflint.hcl
#    # (optional) layer specific shell check config file
#    shellcheck_config: .config/.shellcheckrc
#    # (optional) layer specific yaml lint config file
#    yamllint_config: .config/.yamllintrc
#    # (optional) layer specific markdown lint config file
#    markdownlint_config: .config/.mdl_style.rb
#    # (optional) layer specific trivy config file
#    trivy_config: .config/.trivy.yaml
#    # (optional) layer specific terrascan config file
#    terrascan_config: .config/.terrascan_config.toml
#    # (optioanl) layer specific terraform-docs config file
#    terraform_docs_config: .config/.terraform-docs.yml
#  - name: terraform/demo3
#    # (optional) layer specific 'plan' additionals parameters
#    additional_var_parameters: "-var-file=../common.tfvars"

# AWS Account ID in which your plan are deployed and containing the backend bucket
# SSO Account
ACCOUNT_ID: <AWS_ACCOUNT_ID>

# (Optional) variable to defined additional jinj2 template file to render with variables from `configure.yaml` file
# templates:
#   - source: .github/.github-actions.yaml.j2
#     target: .github/workflows/.github-actions.yaml

########################################################################################################################
# Makefile customizations
########################################################################################################################
# (Optional) this parameter can be used to specify additional make files to be added at the en of the Makefile with "include"
# additional_makefiles: []

########################################################################################################################
# PROXY
########################################################################################################################
HTTP_PROXY: ""
HTTPS_PROXY: ""
